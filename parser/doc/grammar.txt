vim:expandtab

bnf grammar for braid
[x] - x is optional
x*  - 0 or more of x
x+  - 1 or more of x

<program> ::= <directive>* <toplevel-def>* <main-fn>

<directive> ::= <import> | <include>

<toplevel-def> ::= <assignment>
                 | <declaration>
                 | <const-def>
                 | <fn-def>
                 | <type-def>
                 | <record-def>

<statement> ::= <single-statement> ";" | <block>

<single-statement> ::= <assignment>
                     | <reassignment>
                     | declaration
                     | <fn-call>

<assignment> ::= <identifier> ":" [<type>] "=" <expr>

<expr> ::= <match-expr>
         | <when-expr>
         | <const-expr>
         | <dyn-expr>
         | <fn-call>

<fn-call> ::= <identifier> "(" <argument>* ")"

<match-expr> ::= "match" <expr> "with" <first-case> <middle-case>* [<fallback>]
<first-case> ::= ["|"] <match-case>
<middle-case> ::= "|" <match-case>
<match-case> ::= <expr> "->" <const-expr>

<when-expr> ::= "when" <first-pred> <middle-pred>* <fallback>
<first-pred> ::= ["|"] <when-pred>
<middle-pred> ::= "|" <when-pred>
<when-pred> ::= <cond> "->" <expr>

<fallback> ::= "|" <expr>
