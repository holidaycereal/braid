// switch statement
switch x {
case 15..20:
	do_thing();
case 0..5 | 7 | 12:
	do_stuff();
	do_more();
default:
	do_other();
}

// ternary operator
x := when cond -> val1 | val2;

y := when cond1 -> val1 | when cond2 -> val2 | val3;

// match expression
fn factorial(x) : int -> int => match x {
	| 0 -> 1
	| n -> n * factorial(n - 1)
};

fn process(x) : int -> int {
	if not valid(x) {
		log_error();
		=> -1;
	}
	=> match computation(x).value {
		| ok(v) -> v
		| err(_) -> -2
	};
}
